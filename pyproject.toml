[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "PFD-kit"
dynamic = ["version"]
description = "fine-tune and distillation from pre-trained atomic models"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "Ruoyu Wang", email = "ruoyuwang1995@gmail.com" }
]
license = { text = "GNU Lesser General Public License v3 (LGPLv3)" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent"
]
requires-python = ">=3.10"
dependencies = [
    "numpy",
    "dpdata",
    "pydflow>=1.6.57",
    "dargs>=0.4.10",
    "scipy",
    "lbg",
    "packaging",
    "cp2kdata",
    "periodictable",
    "ase",
    "tabulate",
    "quests @ git+https://github.com/dskoda/quests.git",
    "dpdispatcher"
]

[project.urls]
homepage = "https://github.com/ruoyuwang1995nya/pfd-kit.git"

[project.scripts]
pfd = "pfd.entrypoint:main"

[tool.setuptools.dynamic]
version = {attr = "pfd.__version__"}

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = false
allow_zero_version = true
repo_dir = "./"
no_git_verify = false
tag_format = "v{version}"
version_variables = ["pfd/__init__.py:__version__"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "update"
insertion_flag = "<!-- version list -->"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = true

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[project.optional-dependencies]
gpu = [
    "torch",
    "torchvision"
]
